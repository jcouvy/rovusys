// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rovusystem;

import java.awt.Color;
import java.util.ArrayList;

import javax.vecmath.Color3f;
import javax.vecmath.Vector3d;

public class CarbonRover extends Rover {

    private ArrayList<Integer> storage;

    public CarbonRover(Vector3d pos, String name) {
        super(pos, name);
        storage = new ArrayList<Integer>();
        System.out.println("Creating a new CarbonRover object");
    }

    public void measurePosition() {
    	this.setRotationalVelocity(0);
    	this.setTranslationalVelocity(0);
        System.out.println("Rover ["+getName()+"] measured "+location());
    }

   public boolean sendData() {
	   System.out.println("Rover ["+getName()+"] sent data to " + subject.toString());
       return true;
    }
 
    public void freeStorage() {
        storage.clear();
        System.out.println("Clearing storage");
    }
    
    public void update() {
    	super.update();
    	if (getState() == "FINAL") return;
        if (subject.getRequest() == ERequest.MEASURE) {
            setState("MEASURING");
        }
    }
        
    /** This method is called cyclically (20 times per second) by the simulator engine. */
    @Override
    public void performBehavior() {
		
		if (this.collisionDetected() | this.anOtherAgentIsVeryNear()) {
    		setState("COLLISION");
    	}
		
		if (this.getCounter() >= 1500 & getState() != "FINAL") {
			setState("ENDING");
		}
    		
		switch(getState()) {
			case "IDLE" :
				break;	
			case "MEASURING":
				setColor(new Color3f(Color.PINK));
				drive();
				if (timer(5)) measurePosition();
				if (timer(100)) setRotationalVelocity(Math.PI / 2 * (0.5 - Math.random()));
				break;
			case "COLLISION":
				setColor(new Color3f(Color.RED));
				avoid();
				setState("MEASURING");
				break;
			case "ENDING":
				setColor(new Color3f(Color.PINK));
				shutdown();
				missionDone();
				break;
			case "FINAL":
				return;
		}
	}
};
