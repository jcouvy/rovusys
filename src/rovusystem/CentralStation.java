// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rovusystem;

import java.util.ArrayList;

public class CentralStation extends Subject {

	private static final int MAP_WIDTH = 100;
	private static final int MAP_HEIGHT = 100;
	private static final int MIN_COVERAGE = 80;

    private static CentralStation instance = new CentralStation();

    protected boolean isOnline = true;
    private int mapCoverage = 0;
    private ArrayList<Scan> storage = new ArrayList<Scan>();
    public EEnvironment[][] environment = new EEnvironment[MAP_WIDTH][MAP_HEIGHT];
    //private ArrayList<Coordinate> relevantCoords;

    private CentralStation() {
        for (int i=0 ; i<MAP_WIDTH ; ++i) {
            for (int j=0 ; j<MAP_WIDTH ; j++) {
                environment[i][j] = EEnvironment.UNEXPLORED;
            }
        }
    }

    public static CentralStation getInstance() {
        return instance;
    }

    public boolean getStatus() {
        return isOnline;
    }
    
    public EEnvironment[][] getMap() {
    	return environment;
    }

    private void computeRelCoords() {
    }

    private Coordinate[] computeRoute(int id) {
        Coordinate[] route = new Coordinate[42]; // 42 is a placeholder
        return route;
    }

    private void checkCoverage() {
        if (mapCoverage >= MIN_COVERAGE) {
            System.out.println("Minimum coverage requirement fulfilled.");
        }
    }
    
//    private void missionDone() {
//        while (true) {
//        	for (Rover rov : observers) {
//        		if (rov instanceof ScoutingRover && rov.getState() != "ENDING") {
//        			return false;
//        		} return true;
//
//    }
};
