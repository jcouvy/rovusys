// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rovusystem;

import javax.vecmath.Vector3d;
import java.util.ArrayList;

public abstract class Rover extends Observer {

    private int id;
    private Coordinate position;
    private int velocity;
    private boolean isOnline = true;
    private ECardinalDirection orientation;
    private ArrayList<Coordinate> route = new ArrayList<Coordinate>();

    public Rover(Vector3d pos, String name) {
    	super(pos, name);
    }
    
    public int getId() {
    	return id;
    }
    
    public ECardinalDirection getOrientation() {
    	return orientation;
    }
    
    public Coordinate getPosition() {
    	return position;
    }
    
    public void move(int dist) {
    }

    public void rotate(ECardinalDirection dir) {
        orientation = dir;
        System.out.println("Rover ["+this.id+"] rotates to "+orientation);
    }

    public void moveToCoord(Coordinate coord) {
    }

    public void shutdown() {
        isOnline = false;
    }

    public abstract void freeStorage();

    public boolean sendData() {
        return true;
    }
    public void update() {
        if (subject.getRequest() == ERequest.EXPLORE)
            System.out.println("Time to map");
        else if (subject.getRequest() == ERequest.SCAN)
            System.out.println("time to scan");
        else if (subject.getRequest() == ERequest.MEASURE)
            System.out.println("Time to measure");
        else
            System.out.println("Cannot do that");
    }

};
