// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rovusystem;

import java.awt.Color;
import java.util.ArrayList;

import javax.vecmath.Color3f;
import javax.vecmath.Vector3d;

import simbad.sim.RobotFactory;

public class ScoutingRover extends Rover {

    private ArrayList<Coordinate> storage;

    public ScoutingRover(Vector3d pos, String name) {
        super(pos, name);
        storage = new ArrayList<Coordinate>();
        System.out.println("Creating a new ScoutingRover object");
        
        RobotFactory.addBumperBeltSensor(this, 12);
    }

    public void savePosition() {
        System.out.println("Rover ["+getName()+"] found an obstacle at "+location());
    }

    public boolean sendData() {
 	   System.out.println("Rover ["+getName()+"] sent data to " + subject.toString());
	   return true;
    }

    public void freeStorage() {
        storage.clear();
        System.out.println("Clearing Storage");
    }

    public void update() {
    	super.update();
    	if (getState() == "FINAL") return;
        if (subject.getRequest() == ERequest.EXPLORE) {
            setState("SCOUTING");      
        }
    }
    
    public void missionDone() {
    	super.missionDone();
    	subject.setRequest(ERequest.SCAN);
    	subject.notifyObservers();
    }
    
    /** This method is called cyclically (20 times per second) by the simulator engine. */
    @Override
    public void performBehavior() {
    	
		if (this.collisionDetected() | this.anOtherAgentIsVeryNear()) {
    		setState("COLLISION");
    	}
		
		if (this.getCounter() == 500) {
			setState("ENDING");
		}
		
		switch(getState()) {
			case "IDLE" :
				break;
			case "SCOUTING":
				setColor(new Color3f(Color.CYAN));
				drive();
				if (timer(100)) setRotationalVelocity(Math.PI / 2 * (0.5 - Math.random()));
				break;
			case "COLLISION":
				setColor(new Color3f(Color.RED));
				savePosition(); sendData();
				reverse();
				setState("SCOUTING");
				break;
			case "ENDING":
				setColor(new Color3f(Color.CYAN));
				shutdown();
				missionDone();
//				subject.setRequest(ERequest.SCAN);
//				subject.notifyObservers();
				break;
			case "FINAL":
				return;
		}
    }
};
