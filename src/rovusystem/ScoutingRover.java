// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package rovusystem;

import java.awt.Color;
import java.util.ArrayList;

import javax.vecmath.Color3f;
import javax.vecmath.Point3d;
import javax.vecmath.Vector3d;

public class ScoutingRover extends Rover {

    private ArrayList<Coordinate> storage;

    public ScoutingRover(Vector3d pos, String name) {
        super(pos, name);
        storage = new ArrayList<Coordinate>();
        System.out.println("Creating a new ScoutingRover object");
    }

    public void savePosition() {
        System.out.println("Rover ["+getName()+"] found an obstacle at "+location());
    }

    public boolean sendData() {
        return true;
    }

    public void freeStorage() {
        storage.clear();
        System.out.println("Clearing Storage");
    }

    
    /** This method is called cyclically (20 times per second) by the simulator engine. */
    @Override
    public void performBehavior() {
    	update();
    	if (subject.getRequest() == ERequest.EXPLORE) {
    	   	if (this.collisionDetected() | this.anOtherAgentIsVeryNear()) {
        		setState("COLLISION");
        	} else if (this.getCounter() >= 500) {
        		setState("ENDING");
        		missionDone();
        	} else {
        		update();
        	}
        	
        	switch(getState()) {
        		case "SCOUTING":
        			setColor(new Color3f(Color.CYAN));
        	   		drive();
                    if (timer(100)) setRotationalVelocity(Math.PI / 2 * (0.5 - Math.random()));
                    break;
        		case "COLLISION":
           			setColor(new Color3f(Color.RED));
           			savePosition();
           			reverse();
                 	break;
        		case "ENDING":
        			shutdown();
         			break;
        		default: break;
        	}
    	}
    }
};
